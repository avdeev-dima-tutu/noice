name: Android
on:
  push:
    branches:
      - master

env:
  GRADLE_HOME: ${{ github.workspace }}/gradle-home

jobs:
  build-job:
    name: Assemble
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with: {java-version: 1.8}
      - run: ./assemble.sh
      - uses: actions/upload-artifact@v2
        with:
          name: prepare-apk
          path: build-artifacts
  ui-tests-job:
    name: UI tests
    needs: build-job
    runs-on: macos-latest
    timeout-minutes: 10
    strategy:
      matrix:
        # test on minimum supported and last three version
        android: [27] #21, 27, 28, 29
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: prepare-apk
          path: build-artifacts
      - uses: reactivecircus/android-emulator-runner@v2
        with:
          profile: pixel
          api-level: ${{ matrix.android }}
          emulator-options: >-
            -no-boot-anim -no-audio -no-snapshot -no-window -camera-back none
            -camera-front none -gpu swiftshader_indirect -skin 1080x1920 -dpi-device 420
            -prop persist.sys.language=ru -prop persist.sys.country=RU
          script: |
            ./install_run.sh
#            ./gradlew connectedCheck --no-daemon --stacktrace --gradle-user-home "$GRADLE_HOME"
#            adb -e shell screencap /sdcard/screen.png
#            adb -e pull /sdcard/screen.png
      - name: Commit and push results to temp branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ls -la build-artifacts
          BRANCH_NAME="temp_branch_${{github.run_id}}"
          git fetch
          git checkout -b $BRANCH_NAME
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "record snapshots"
          git push --set-upstream origin $BRANCH_NAME
      - uses: tutu-ru-mobile/action_create_pull_request@tag0.4
        with:
          title: "Record snapshot"
          access_token: "${{ secrets.GITHUB_TOKEN }}"
          branch_from: "temp_branch_${{github.run_id}}"
          branch_to: "${{ github.ref }}" #github.head_ref for PR
#      - uses: codecov/codecov-action@v1
#        with:
#          flags: android,ui_tests

#  play-store-release: # not using cache action for releases
#    name: Play Store Release
#    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
#    needs: ui-tests
#    runs-on: ubuntu-latest
#    timeout-minutes: 10
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-java@v1
#        with:
#          java-version: 10
#      - run: >-
#          echo "$SERVICE_ACCOUNT_KEY" > service-account-key.json;
#          echo "$JKS_STORE" | base64 --decode > keystore.jks;
#        env:
#          SERVICE_ACCOUNT_KEY: ${{ secrets.SERVICE_ACCOUNT_KEY }}
#          JKS_STORE: ${{ secrets.JKS_STORE }}
#      - run: bundle install && bundle exec fastlane beta
#        env:
#          STORE_PASSWORD: ${{ secrets.JKS_STORE_PASSWORD }}
#          KEY_ALIAS: ${{ secrets.JKS_ALIAS }}
#          KEY_PASSWORD: ${{ secrets.JKS_ALIAS_PASSWORD }}
#      - if: ${{ always() }}
#        run: rm -f service-account-key.json keystore.jks
